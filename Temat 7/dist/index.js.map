{"version":3,"sources":["webpack://battleships/./src/guid.ts","webpack://battleships/./src/note.ts","webpack://battleships/./src/noteboard.ts","webpack://battleships/./src/sessionstotagestore.ts","webpack://battleships/webpack/bootstrap","webpack://battleships/./src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["export class Guid {\r\n    static newGuid() {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0,\r\n          v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n  }","import { Guid } from \"./guid\";\r\n\r\nexport class Note {\r\n    id: Guid;\r\n    title: string;\r\n    content: string;\r\n    createdAt: Date;\r\n    constructor(title: string, content: string) {\r\n       this.id = Guid.newGuid();\r\n       this.title = title;\r\n       this.content = content;\r\n       this.createdAt = new Date();\r\n    }\r\n}","import { Guid } from \"./guid\";\r\nimport { Note } from \"./note\";\r\nimport { NoteStore } from \"./notestore\";\r\nimport { SessionStorageStore } from './sessionstotagestore'\r\n\r\nexport class NoteBoard {\r\n    notesContainer: HTMLDivElement;\r\n    storage: NoteStore;\r\n\r\n    constructor() {\r\n        this.storage = new SessionStorageStore();\r\n        this.addTitleInput();\r\n        this.addContentInput();\r\n        this.addButton();                        \r\n        this.notesContainer = <HTMLDivElement>(document.createElement('div'));\r\n        document.body.append(this.notesContainer);\r\n    }\r\n\r\n    private addTitleInput(): void {\r\n        const div = <HTMLInputElement>(document.createElement('div'));\r\n        const span = <HTMLInputElement>(document.createElement('span'));\r\n        span.textContent = \"Title:\";\r\n        const titleInput = <HTMLInputElement>(document.createElement('input'));\r\n        titleInput.setAttribute('type', 'text');\r\n        titleInput.setAttribute('id', 'title');\r\n        div.appendChild(span);\r\n        div.appendChild(titleInput);\r\n        document.body.appendChild(div);\r\n    }\r\n\r\n    private addContentInput(): void {\r\n        const div = <HTMLInputElement>(document.createElement('div'));\r\n        const span = <HTMLInputElement>(document.createElement('span'));\r\n        span.textContent = \"Content:\";\r\n        const contentInput = <HTMLTextAreaElement>(document.createElement('textarea'));\r\n        contentInput.setAttribute('id', 'content');\r\n        div.appendChild(span);\r\n        div.appendChild(contentInput);\r\n        document.body.appendChild(div);\r\n    }\r\n\r\n    private addButton(): void {\r\n        const div = <HTMLInputElement>(document.createElement('div'));\r\n        const addButton = <HTMLButtonElement>(document.createElement('button'));\r\n        addButton.textContent = \"Add\";\r\n        addButton.addEventListener('click', () => {\r\n            let title = (<HTMLInputElement>document.getElementById('title')).value;\r\n            let content = (<HTMLInputElement>document.getElementById('content')).value;    \r\n            this.storage.addNote(new Note(title, content));\r\n            this.refreshList();\r\n        });\r\n        div.appendChild(addButton);\r\n        document.body.appendChild(div);\r\n    }\r\n\r\n    public refreshList(): void {\r\n        this.notesContainer.innerHTML = '';\r\n        const notes = <Note[]>this.storage.getNotes();\r\n        if (!notes)\r\n            return;\r\n        notes.forEach( (item) => {\r\n            const titleDiv = <HTMLDivElement>(document.createElement('div'));\r\n            titleDiv.innerHTML = item.title;\r\n            const contentDiv = <HTMLDivElement>(document.createElement('div'));\r\n            contentDiv.innerHTML = item.content;\r\n            const removeBtn = <HTMLButtonElement>(document.createElement('button'));\r\n            removeBtn.textContent = \"Remove\";\r\n            removeBtn.setAttribute('data-id', item.id.toString());\r\n            removeBtn.addEventListener('click', (e) => {\r\n                const id = (<HTMLButtonElement>e.target).getAttribute('data-id') as Guid;\r\n                this.storage.deleteNote(id);\r\n                this.refreshList();\r\n            });\r\n            this.notesContainer.appendChild(titleDiv);\r\n            this.notesContainer.appendChild(contentDiv);\r\n            this.notesContainer.appendChild(removeBtn);\r\n            this.notesContainer.appendChild(document.createElement('hr'));\r\n        }, this)\r\n    }\r\n}","import { Guid } from './guid';\r\nimport { Note } from './note';\r\nimport { NoteStore } from './notestore';\r\n\r\nexport class SessionStorageStore implements NoteStore {\r\n\r\n    deleteNote(id: Guid): void {\r\n        let notes = <string>sessionStorage.getItem('notes');\r\n        let allNotes: Note[];\r\n        allNotes = <Note[]>JSON.parse(notes);\r\n        let newNotes = allNotes.filter(el => el.id != id);\r\n        sessionStorage.setItem('notes', JSON.stringify(newNotes));\r\n    }\r\n    \r\n    public addNote(note: Note): void {\r\n        let notes = <string>sessionStorage.getItem('notes');\r\n        let allNotes: Note[];\r\n        allNotes = <Note[]>JSON.parse(notes);\r\n        if(allNotes === null){\r\n            allNotes = [];\r\n        }\r\n        allNotes.push(note);\r\n        sessionStorage.setItem('notes', JSON.stringify(allNotes));\r\n    }\r\n\r\n    public getNotes(): Note[] {\r\n        let notes = <string>sessionStorage.getItem('notes');\r\n        return <Note[]>JSON.parse(notes);\r\n    }\r\n   \r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NoteBoard }  from \"./noteboard\";\r\n\r\nlet board = new NoteBoard();\r\nboard.refreshList();"],"sourceRoot":""}